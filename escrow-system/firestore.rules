rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ==================== 헬퍼 함수 ====================
    
    // 인증된 사용자인지 확인
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // 특정 사용자인지 확인
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 관리자인지 확인
    function isAdmin() {
      return isAuthenticated() && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 거래의 구매자인지 확인
    function isBuyer(transactionData) {
      return isAuthenticated() && request.auth.uid == transactionData.buyerId;
    }
    
    // 거래의 판매자인지 확인
    function isSeller(transactionData) {
      return isAuthenticated() && request.auth.uid == transactionData.sellerId;
    }
    
    // 거래 참여자인지 확인
    function isParticipant(transactionData) {
      return isBuyer(transactionData) || isSeller(transactionData);
    }
    
    // ==================== TRANSACTIONS ====================
    
    match /transactions/{transactionId} {
      // 읽기: 거래 참여자 또는 관리자
      allow read: if isAuthenticated() && (
        isParticipant(resource.data) || 
        isAdmin()
      );
      
      // 생성: 인증된 사용자 (구매자)
      allow create: if isAuthenticated() && 
        request.resource.data.buyerId == request.auth.uid &&
        request.resource.data.status == 'INITIATED';
      
      // 업데이트: 제한적 (상태 전이는 Cloud Functions에서만)
      allow update: if isAuthenticated() && (
        // 구매자: 결제 정보, 배송지 정보 업데이트
        (isBuyer(resource.data) && 
         request.resource.data.status == resource.data.status &&
         (request.resource.data.keys().hasOnly(['shippingInfo', 'updatedAt']) ||
          request.resource.data.keys().hasOnly(['paymentId', 'updatedAt']))) ||
        
        // 판매자: 배송 정보 업데이트
        (isSeller(resource.data) && 
         request.resource.data.status == resource.data.status &&
         request.resource.data.keys().hasOnly(['shippingInfo', 'updatedAt'])) ||
        
        // 관리자: 모든 필드
        isAdmin()
      );
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // ==================== CHATS ====================
    
    match /chats/{chatId} {
      // 읽기: 채팅 참여자 또는 관리자
      allow read: if isAuthenticated() && (
        request.auth.uid in resource.data.participants ||
        isAdmin()
      );
      
      // 생성: 참여자
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants;
      
      // 업데이트: 참여자 (안읽은 메시지 개수, 마지막 읽은 시간)
      allow update: if isAuthenticated() && (
        request.auth.uid in resource.data.participants ||
        isAdmin()
      );
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
      
      // ==================== CHAT MESSAGES (서브컬렉션) ====================
      
      match /messages/{messageId} {
        // 읽기: 채팅 참여자
        allow read: if isAuthenticated() && (
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants ||
          isAdmin()
        );
        
        // 생성: 채팅 참여자 또는 시스템 (Cloud Function)
        allow create: if isAuthenticated() && (
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants ||
          request.resource.data.senderUid == 'system'
        );
        
        // 업데이트: 읽음 상태만 (readBy 배열에 추가)
        allow update: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy']);
        
        // 삭제: 관리자만
        allow delete: if isAdmin();
      }
    }
    
    // ==================== PAYMENTS ====================
    
    match /payments/{paymentId} {
      // 읽기: 결제자 또는 관리자
      allow read: if isAuthenticated() && (
        isUser(resource.data.userId) ||
        isAdmin()
      );
      
      // 생성: Cloud Functions만 (서버 사이드에서만)
      allow create: if false;
      
      // 업데이트: Cloud Functions만
      allow update: if false;
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // ==================== REFUNDS ====================
    
    match /refunds/{refundId} {
      // 읽기: 거래 참여자 또는 관리자
      allow read: if isAuthenticated() && (
        exists(/databases/$(database)/documents/transactions/$(resource.data.transactionId)) &&
        (isParticipant(get(/databases/$(database)/documents/transactions/$(resource.data.transactionId)).data) ||
         isAdmin())
      );
      
      // 생성: Cloud Functions만
      allow create: if false;
      
      // 업데이트: Cloud Functions만
      allow update: if false;
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // ==================== DISPUTES ====================
    
    match /disputes/{disputeId} {
      // 읽기: 분쟁 신고자, 거래 참여자, 관리자
      allow read: if isAuthenticated() && (
        isUser(resource.data.reportedBy) ||
        isParticipant(get(/databases/$(database)/documents/transactions/$(resource.data.transactionId)).data) ||
        isAdmin()
      );
      
      // 생성: 거래 참여자
      allow create: if isAuthenticated() && 
        exists(/databases/$(database)/documents/transactions/$(request.resource.data.transactionId)) &&
        isParticipant(get(/databases/$(database)/documents/transactions/$(request.resource.data.transactionId)).data);
      
      // 업데이트: 증빙 자료 추가는 참여자, 해결은 관리자만
      allow update: if isAuthenticated() && (
        // 참여자: 증빙 자료 추가
        (isParticipant(get(/databases/$(database)/documents/transactions/$(resource.data.transactionId)).data) &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['evidenceUrls', 'evidenceDescriptions', 'updatedAt'])) ||
        
        // 관리자: 모든 필드
        isAdmin()
      );
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
    
    // ==================== EVENT LOGS ====================
    
    match /event_logs/{logId} {
      // 읽기: 거래 참여자 또는 관리자
      allow read: if isAuthenticated() && (
        exists(/databases/$(database)/documents/transactions/$(resource.data.transactionId)) &&
        (isParticipant(get(/databases/$(database)/documents/transactions/$(resource.data.transactionId)).data) ||
         isAdmin())
      );
      
      // 생성: Cloud Functions만
      allow create: if false;
      
      // 업데이트/삭제: 불가
      allow update, delete: if false;
    }
    
    // ==================== SCHEDULED TASKS ====================
    
    match /scheduled_tasks/{taskId} {
      // 읽기: 관리자만
      allow read: if isAdmin();
      
      // 생성/업데이트/삭제: Cloud Functions만
      allow create, update, delete: if false;
    }
    
    // ==================== USERS ====================
    
    match /users/{userId} {
      // 읽기: 모든 인증된 사용자 (공개 프로필)
      allow read: if isAuthenticated();
      
      // 생성: 본인만
      allow create: if isUser(userId);
      
      // 업데이트: 본인 또는 관리자
      allow update: if isUser(userId) || isAdmin();
      
      // 삭제: 관리자만
      allow delete: if isAdmin();
    }
  }
}













